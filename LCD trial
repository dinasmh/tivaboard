#include "C:\Users\pc\Desktop\LCD code\tm4c123gh6pm.h"

/*lcd pins masks*/
#define RS 0x00     /* PORT B bit 0 */
#define RW 0x01     /* PORT B bit 1 */
#define EN 0x02     /* PORT B bit 2 */

/* LCD commands */
#define clear_display     0x01
#define moveCursorRight   0x06
#define moveCursorLeft    0x08
#define cursorBlink       0x0F
#define Function_set_4bit 0x28
#define Entry_mode        0x06
#define Set5x7FontSize    0x20
#define FirstRow          0x80

/* LCD functions */
void delay_ms(int n); /* mili second delay */
void delay_us(int n); /* micro second delay */ 
void init(void);  /* LCD initialization */
void comnd(char command); /* to send commands to LCD */
void writeChar(char data); /* Writes an ASCII character */
void writeHalfData(char data, char control); /* Writes 4-bits */
void lcdString (char *str);	/* Send string to LCD function */

/* in the primary main we should add the following */

int main()
{
 init();
 comnd(clear_display);
 comnd(FirstRow); /* Force cusor to begining of first row */
 
/* we should send the data to be displayed on the LCD from an array sending a char by char using the WriteChar() followed by a delay inside a for loop in the primary main function */ 
 
}

/* LCD and GPIO port B initialization */ 
void init(void)
{
 
	SYSCTL_RCGCGPIO_R = 0x02;   
	while ((SYSCTL_PRGPIO_R&0X02) == 0){};
	GPIO_PORTB_DIR_R|=0xFF;
	GPIO_PORTB_DEN_R|=0xFF;
	GPIO_PORTB_AMSEL_R &= ~0XFF;
	GPIO_PORTB_AFSEL_R &= ~0XFF;

	comnd(Set5x7FontSize);  /* select 5x7 font size and 2 rows of LCD */
	comnd(Function_set_4bit); /* Select 4-bit Mode */
	comnd(moveCursorRight); 
	comnd(clear_display); /* clear what is written on display */
	comnd(cursorBlink);  /* Enable Display and cursor blinking */
 
}

void comnd(char command)
{
    writeHalfData(command & 0xF0, 0);   /* Write the upper 4-bits of the command to LCD */
    writeHalfData(command << 4, 0);     /* Write the lower 4-bits of the command to LCD */
    
    if (command < 4)
        delay_ms(2);         /*first two commands take 1.64ms delay so we add a delay of 2ms*/
    else
        delay_us(40);        /* 40us delay for any other command */
}


void writeHalfData(char data,char control)
{
    data &= 0xF0;       /* Extract upper half for data */
    control &= 0x0F;    /* Extract lower half for control */
    GPIO_PORTB_DATA_R &= 0xFC;       /* Set RS and R/W to zero for write operation */
    GPIO_PORTB_DATA_R = data | control | EN;  /* Provide Pulse to Enable pin to perform wite operation */
    GPIO_PORTB_DATA_R = data;  /*Send data*/
    
}
void writeChar(char data)
{
    writeHalfData(data & 0xF0, RS);    /* Write upper half (first 4-bits) to LCD and RS = 1 to write data */
    writeHalfData(data << 4, RS);      /* Write lower half (second 4-bits) to LCD and RS = 1 to write data */
    delay_us(40);
}


void lcdString (char *str)	/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)  /* Send each char of string till the NULL */
	{
		writeChar(str[i]);
	}
}

/* Since the LCD operates slower than the micro-controller we must define a delay function*/
/* Mili delay */
void delay_ms(int n)
{
 int i,j;
 for(i=0;i<n;i++)
 for(j=0;j<3180;j++)
 {}
}

/* Micro delay */
void delay_us(int n)
{
 int i,j;
 for(i=0;i<n;i++)
 for(j=0;j<3;j++)
 {}
 
}
